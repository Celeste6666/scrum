{"version":3,"file":"static/js/618.fb366e3c.chunk.js","mappings":"yKAwFA,UAnFA,WACE,OAAmBA,EAAAA,EAAAA,UAAS,CAC1B,CACEC,IAAIC,EAAAA,EAAAA,SACJC,OACE,wEAEE,kBAAM,mBAIVC,YAAa,iBACbC,SACE,yNAEE,gBAAIC,UAAU,wBAAuB,WACnC,2IACA,gJACA,8GACG,6GAKX,CACEL,IAAIC,EAAAA,EAAAA,SACJC,OACE,wEAEE,kBAAM,qBAIVC,YAAa,iBACbC,SAAS,4MAEX,CACEJ,IAAIC,EAAAA,EAAAA,SACJC,OACE,wEAEE,kBAAM,4BAIVC,YAAa,iBACbC,SACE,sLAEE,gBAAIC,UAAU,wBAAuB,WACnC,sDACA,wEACA,8GACG,mKApDNC,GAyDL,YAzDa,GA0Df,OACE,UAAC,IAAS,CAACC,SAAU,oBAAoB,WAEvC,eAAIF,UAAU,mCAAkC,qEAEhD,gBAAKA,UAAU,iCAAgC,SAC5CC,EAASE,KAAI,gBAAER,EAAE,EAAFA,GAAIE,EAAK,EAALA,MAAOC,EAAW,EAAXA,YAAaC,EAAO,EAAPA,QAAO,OAAO,iBAAKC,UAAU,6BAA4B,WAC/F,eAAIA,UAAW,+DAAiEF,EAAY,SACzFD,KAEH,gBAAKG,UAAU,yCAAwC,SACpDD,MALkGJ,EAOjG,OAIR,gBAAKS,IAAKC,EAAYC,IAAI,aAAaN,UAAU,kBAEjD,SAAC,IAAkB,CAACO,KAAK,2BAAOC,KAAK,eAAeN,SAAS,cAGnE,C,wDC5DA,IAxBA,SAAmBO,GACjB,IAAQC,EAAuBD,EAAvBC,SAAUR,EAAaO,EAAbP,SAClB,OACE,qBAASF,UAAW,0BAA4BE,GAAqB,IAAI,UAEtEQ,EAAS,IACV,iBAAKV,UAAU,sEAAqE,WAClF,8BAEGU,EAAS,MAEZ,iBAAKV,UAAU,6DAA4D,UAEnD,QAArBU,EAAS,GAAGC,MAA4B,gBAAKP,IAAKQ,EAAIN,IAAI,KAAKO,MAAM,KAAKC,OAAO,KAAKd,UAAU,iBAAoB,GACpHU,EAAS,GAETA,EAASK,QAAU,EAAIL,EAAS,GAAK,UAG1C,SAAC,IAAO,MAGd,C,sFCMA,IAzBA,WACE,IAAMM,GAAcC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,aAAaC,WAAW,IACnEC,EAAOC,MAAMN,GAAaO,KAAK,EAAG,EAAGP,GAErCQ,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,MACfC,GAAWX,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,aAAaU,YAAY,IAIvE,OAHAC,EAAAA,EAAAA,YAAU,WACRN,GAASO,EAAAA,EAAAA,GAAWL,GACtB,GAAG,KAED,gBAAK1B,UAAU,+DAA8D,SAC1EqB,EAAKlB,KAAI,SAAC6B,EAAGC,GAAK,OACjB,iBAEEjC,UACE,2CACCiC,EAAQ,IAAML,EAAW,aAAe,kBAHtCM,EAAAA,EAAAA,KAKC,KAIhB,C","sources":["components/SprintExplanation.js","components/general/GameBasis.js","components/general/Sidebar.js"],"sourcesContent":["import { useId, useState } from 'react';\r\nimport GameBasis from '@/components/general/GameBasis';\r\nimport BtnChallengeAccept from '@/components/general/BtnChallengeAccept';\r\nimport Confluence from '@/assets/confluence-logo.png';\r\n\r\nfunction SprintExplanation() {\r\n  const [keywords] = useState([\r\n    {\r\n      id: useId(),\r\n      title: (\r\n        <>\r\n          每日站立會議\r\n          <br />\r\n          (Daily Scrum)\r\n        </>\r\n      ),\r\n      borderColor: 'border-primary',\r\n      content: (\r\n        <>\r\n          在Sprint當中每天由SM主持會議，以15分鐘為限制。 在會議中需報告三件事 :\r\n          <ul className=\"list-disc list-inside\">\r\n            <li>昨天為團隊的短衝目標(Sprint Goal)做了那些進度</li>\r\n            <li>今天我會如何準備來幫助團隊達到短衝目標</li>\r\n            <li>過程中有遇到什麼問題、難題</li>\r\n          </ul>\r\n          透過團隊分享，追蹤大家的工作狀況。\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      id: useId(),\r\n      title: (\r\n        <>\r\n          短衝檢視會議\r\n          <br />\r\n          (Sprint Review)\r\n        </>\r\n      ),\r\n      borderColor: 'border-role-sm',\r\n      content: <>用來檢視該次短衝增量的成果，以蒐集相關的回饋數據或意見。</>,\r\n    },\r\n    {\r\n      id: useId(),\r\n      title: (\r\n        <>\r\n          短衝自省會議\r\n          <br />\r\n          (Sprint Retrospective)\r\n        </>\r\n      ),\r\n      borderColor: 'border-role-dt',\r\n      content: (\r\n        <>\r\n          團隊在自省會議裡, 會共同回顧該短衝歷程發生的事情。\r\n          <ul className=\"list-disc list-inside\">\r\n            <li>好的地方</li>\r\n            <li>可以改進的地方</li>\r\n            <li>如何維持我們已有的成功經驗</li>\r\n          </ul>\r\n          優化工作流程、讓團隊有變得更好的機會。推薦工具Confluence。\r\n        </>\r\n      ),\r\n    },\r\n  ]);\r\n  return (\r\n    <GameBasis addClass={\"bg-base-pattern-B\"}>\r\n      {/* title */}\r\n      <h4 className=\"card_body card_title py-2.5 mb-5\">短衝規劃會議 (Sprint Planning)</h4>\r\n      {/*explanation components */}\r\n      <div className=\"w-full grid grid-cols-3 gap-10\">\r\n        {keywords.map(({id, title, borderColor, content}) => (<div className=\"flex flex-col items-center\" key={id}>\r\n          <h6 className={\"w-full text-h6 card_title bg-white border rounded-xl py-3.5 \" + borderColor}>\r\n            {title}\r\n          </h6>\r\n          <div className=\"p-5 text-primary-active leading-normal\">\r\n            {content}\r\n          </div>\r\n        </div>))}\r\n\r\n      </div>\r\n      {/* photo */}\r\n      <img src={Confluence} alt=\"Confluence\" className=\"inline-block\" />\r\n      {/* button */}\r\n      <BtnChallengeAccept text=\"接受挑戰\" next=\"/sprint/game\" addClass=\"ml-auto\" />\r\n    </GameBasis>\r\n  );\r\n}\r\n\r\nexport default SprintExplanation;\r\n","import PO from '@/assets/intro/PO.png';\r\nimport Sidebar from '@/components/general/Sidebar';\r\nfunction GameBasis(props) {\r\n  const { children, addClass } = props;\r\n  return (\r\n    <section className={\"card flex-col relative\" + (addClass? addClass : \"\")}>\r\n      {/* title */}\r\n      {children[0]}\r\n      <div className=\"card_body flex flex-col justify-between items-center px-5 pt-5 pb-2\">\r\n        <>\r\n          {/* components */}\r\n          {children[1]}\r\n        </>\r\n        <div className=\"flex flex-reverse justify-between items-center w-full mt-2\">\r\n          {/* photo */}\r\n          {children[2].type !== \"img\" ? (          <img src={PO} alt=\"PO\" width=\"55\" height=\"70\" className=\"inline-block\" />): \"\"}\r\n          {children[2]}\r\n          {/* note */}\r\n          {children.length >= 3 ? children[3] : ''}\r\n        </div>\r\n      </div>\r\n      <Sidebar />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default GameBasis;\r\n","import { useEffect } from 'react';\nimport { useLoaderData } from 'react-router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { v4 as uuid } from 'uuid';\nimport { changePage } from '@/redux/sidebarSlice';\nfunction Sidebar() {\n  const TOTAL_PAGES = useSelector((state) => state.sidebarSlice.total_pages);\n  const dots = Array(TOTAL_PAGES).fill(0, 0, TOTAL_PAGES);\n\n  const dispatch = useDispatch();\n  const routerLoader = useLoaderData();\n  const CUR_PAGE = useSelector((state) => state.sidebarSlice.current_page);\n  useEffect(() => {\n    dispatch(changePage(routerLoader));\n  }, []);\n  return (\n    <div className=\"absolute top-1/2 right-5 z-10 -translate-y-1/2 flex flex-col\">\n      {dots.map((i, index) => (\n        <span\n          key={uuid()}\n          className={\n            'inline-block w-3 h-3 my-1 rounded-full ' +\n            (index + 1 === CUR_PAGE ? 'bg-primary' : 'bg-[#D9D9D9]')\n          }\n        ></span>\n      ))}\n    </div>\n  );\n}\n\nexport default Sidebar;\n"],"names":["useState","id","useId","title","borderColor","content","className","keywords","addClass","map","src","Confluence","alt","text","next","props","children","type","PO","width","height","length","TOTAL_PAGES","useSelector","state","sidebarSlice","total_pages","dots","Array","fill","dispatch","useDispatch","routerLoader","useLoaderData","CUR_PAGE","current_page","useEffect","changePage","i","index","uuid"],"sourceRoot":""}